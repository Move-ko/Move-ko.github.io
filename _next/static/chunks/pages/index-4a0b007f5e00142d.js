(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5405],{5557:function(e,o,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(816)}])},816:function(e,o,n){"use strict";n.r(o),n.d(o,{default:function(){return A}});var t=n(5893),l=n(7294),r=n(6274),s=n(4767),i=n(44),a=n(7357),d=n(629),x=n(948),c=n(5861),u=n(5697),h=n.n(u),f=n(526),j=e=>{let{children:o}=e;return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"What is Move?"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Diem 블록체인의 구현을 위해 만들어졌으며,현재는 Aptos 및 Sui에서 사용하고 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move를 사용하면 개발자가 자산을 유연하게 관리하고 전송하는 프로그램을 작성하는 동시에 해당 자산에 대한 공격에 방어(보안 및 보호)를 제공할수 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Rust에서 힌트를 얻어서 만들었습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"aptos버전과 sui버전으로 나누어 설명합니다"})]})})]})},m=e=>{let{children:o}=e,n=()=>{console.log("Code block clicked")},l={lineNumberColor:"#ccc",lineNumberBgColor:"#222",backgroundColor:"#222",textColor:"#ccc",substringColor:"#00ff00",keywordColor:"#0077ff",attributeColor:"#ffaa00",selectorTagColor:"#0077ff",docTagColor:"#aa00ff",nameColor:"#f8f8f8",builtInColor:"#0077ff",literalColor:"#ffaa00",bulletColor:"#ffaa00",codeColor:"#ccc",additionColor:"#00ff00",regexpColor:"#f8f8f8",symbolColor:"#ffaa00",variableColor:"#ffaa00",templateVariableColor:"#ffaa00",linkColor:"#aa00ff",selectorAttributeColor:"#ffaa00",selectorPseudoColor:"#aa00ff",typeColor:"#0077ff",stringColor:"#00ff00",selectorIdColor:"#ffaa00",quoteColor:"#f8f8f8",templateTagColor:"#ccc",deletionColor:"#ff0000",titleColor:"#0077ff",sectionColor:"#0077ff",commentColor:"#777",metaKeywordColor:"#f8f8f8",metaColor:"#aa00ff",functionColor:"#0077ff",numberColor:"#ffaa00"};return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"모듈과 스크립트"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%",textAlign:"left"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move에는 모듈 과 스크립트 라는 두 가지 유형의 프로그램이 있습니다 . 모듈은 이러한 유형에서 작동하는 함수와 함께 구조체 유형을 정의하는 라이브러리입니다.구조체 유형은 Move의 전역저장소 스키마를 정의하고 모듈 함수는 저장소 업데이트 규칙을 정의하고 있습니다.모듈은 전역저장소에 저장됩니다. main스크립트는 기존 언어의 함수와 유사한 실행 가능한 진입점입니다.스크립트는 일반적으로 전역저장소에 대한 업데이트를 수행하는 게시된 모듈의 기능을 호출합니다.스크립트는 전역저장소에 게시되지 않는 임시 코드 스니펫입니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move 소스 파일(또는 컴파일 단위 )에는 여러 모듈과 스크립트가 포함될 수 있습니다. 그러나 모듈 게시 또는 스크립트 실행은 별도의 VM 작업입니다."})]})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h4",gutterBottom:!0,children:"스크립트"})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsxs)(r.Z,{xs:12,md:8,children:["-ex)스크립트 구조",(0,t.jsx)(f.dn,{text:"script {\n            <use>*\n            <constants>*\n            fun <identifier><[type parameters: constraint]*>([identifier: type]*) <function_body>\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})]}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%",textAlign:"left"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"블록 script는 use로 선언으로 시작하며 그 밑에 상수 그밑에 함수순으로 되어야합니다.main함수는 어떤 이름이든 가질수 있으며(main호출할 필요가 없음)스크립트 블록의 유일한 함수이며 인수를 얼마든지 가질수 잇고 값은 반환할수 없습니다"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"스크립트는 권한이 매우 제한되어 있습니다.친구를 선언하거나 유형을 구성하거나 전역저장소에 엑세스 할수 없습니다. 주요 목적은 모듈 함수를 호출하는 것입니다."})]})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"script {\n            // Import the debug module published at the named account address std.\n            use std::debug;\n        \n            const ONE: u64 = 1;\n        \n            fun main(x: u64) {\n                let sum = x + ONE;\n                debug::print(&sum)\n            }\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%",textAlign:"left"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"스크립트는 권한이 매우 제한되어 있습니다.친구를 선언하거나 유형을 구성하거나 전역저장소에 엑세스 할수 없습니다. 주요 목적은 모듈 함수를 호출하는 것입니다."})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h4",gutterBottom:!0,children:"모듈"})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsxs)(r.Z,{xs:12,md:8,children:["-ex)모듈의 구조",(0,t.jsx)(f.dn,{text:"module <address>::<identifier> {\n            (<use> | <friend> | <type> | <function> | <constant>)*\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})]}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"ex)address:명명된 주소 또는 리터럴 주소"})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module 0x42::example {\n            struct Example has copy, drop { i: u64 }\n        \n            use std::debug;\n            friend 0x42::another_example;\n        \n            const ONE: u64 = 1;\n        \n            public fun print(x: u64) {\n                let sum = x + ONE;\n                let example = Example { i: sum };\n                debug::print(&sum)\n            }\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%",textAlign:"left"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"이 module 0x42::example모듈의 부분은 모듈이 전역저장소의 계정주소로 게시되도록 지정합니다 모듈은 명명된 주소를 사용하여 선언할수도 있습니다"})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module example_addr::example {\n            struct Example has copy, drop { a: address }\n        \n            use std::debug;\n            friend example_addr::another_example;\n        \n            public fun print() {\n                let example = Example { a: @example_addr };\n                debug::print(&example)\n            }\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%",textAlign:"left"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"명명된 주소는 소스언어 수준과 컴파일 중에만 존재하기 떄문에 명명된 주소는 바이트코드 수준에서 해당 값을 완전히 대체합니다"})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"script {\n            fun example() {\n                0xC0FFEE::m::foo(@0xC0FFEE);\n            }\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%",textAlign:"left"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"my_addr로 설정하여 컴파일하면 0xC0FFEE운영상 다음과 동일합니다."})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"script {\n            fun example() {\n                0xC0FFEE::m::foo(@0xC0FFEE);\n            }\n        }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%",textAlign:"left"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"그러나 소스 수준에서 이들은 동일하지 않습니다.함수는 해당 주소에 할당된 숫자값이 아니라 명명된 주소를 통해 엑세스 해야 m::foo합니다 모듈 이름은 문재 a to z 또는 Ato로 시작할수 있습니다"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"첫번쨰 문자 뒤에 모듈 이름에는 밑줄 _ a~z,A~Z또는 숫자가 포함될수 있습니다."})]})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module my_module {}\n          module foo_bar_42 {}\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%",textAlign:"left"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"일반적으로 모듈 이름은 소문자로 시작합니다 명명된 모듈은 my_module명명된 소스파일에 저장되어야 합니다. **my_module_move**"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"블록 내부의 모든 요소는 module임의의 순서로 나타낼수 있습니다.types기본적으로 모듈은 및 의 모음입니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"functions키워드 use는 다른 모듈에서 유형을 가져오는사용합니다"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"friend는 신뢰할수 잇는 모듈 목록을 지정합니다"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"const는 모듈의 함수에서 사용할수있는 전용 상수를 지정합니다"})]})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%",textAlign:"left"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"모듈 특징정리"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"1. 모듈 요소(사용, 상수, 함수 등)는 특정 순서로 구성되어야 합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"2.모듈은 전역 저장소에 저장됩니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"3.모듈은 main이라는 함수를 포함해야 합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"4. 구조체는 모듈에서 유효합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"5.모듈의 어떤 함수도 반환 값을 가질 수 없습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"6.모듈에는 하나의 함수만 선언할 수 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"7.친구 모듈은 모듈 내에서 유효합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"8.모듈은 주소와 식별자로 선언해야 합니다."})]})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{width:"100%",textAlign:"left"},children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"스크립트 특징정리"}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"1.스크립트는 전역 저장소에 저장되지 않습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"2.스크립트 요소(사용, 상수, 함수 등)는 특정 순서로 구성되어야 합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"3.스크립트 블록에는 하나의 함수만 선언할 수 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"4. 스크립트 함수는 임의의 이름을 가질 수 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"5.상수는 스크립트에서 유효합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"6.스크립트에는 하나의 함수만 선언할 수 있으며 이름은 main으로 지정해야 합니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"7.스크립트에 선언된 함수는 얼마든지 있을 수 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"8.friend 모듈은 스크립트에서 선언할 수 있습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"9.스크립트에서 선언된 함수는 매개변수를 가질 수 없습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"10. 스크립트에서 선언된 함수는 반환 값을 가질 수 없습니다."}),(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"11.구조체는 스크립트에서 유효합니다."})]})}),(0,t.jsxs)(r.Z,{xs:12,md:8,children:["- ex)예시",(0,t.jsx)(f.dn,{text:"// Example Module\n          module overmind::bananas {\n          \n              use std::vector;\n              use std::signer;\n          \n              struct BananaStore has key {\n                  bushels: vector<Bushel>\n              }\n          \n              struct Bushel has store, drop {\n                  bananas: vector<Banana>\n              }\n          \n              struct Banana has store, drop {}\n          \n              public entry fun buy_banana(buyer: &signer) acquires BananaStore {\n                  let buyer_address = signer::address_of(buyer);\n          \n                  if (!exists<BananaStore>(buyer_address)) {\n                      move_to(\n                          buyer,\n                          BananaStore {\n                              bushels: vector<Bushel>[]\n                          }\n                      );\n                  };\n          \n                  let bananaStore = borrow_global_mut<BananaStore>(buyer_address);\n          \n                  let bushels_mut_ref = &mut bananaStore.bushels;\n          \n                  let bushel_new = Bushel {\n                      bananas: vector<Banana>[\n                          Banana {},\n                          Banana {},\n                          Banana {},\n                          Banana {}\n                      ]\n                  };\n          \n                  vector::push_back<Bushel>(bushels_mut_ref, bushel_new);\n              }\n          \n              public entry fun eat_banana(account: &signer) acquires BananaStore {\n                  let account_address = signer::address_of(account);\n          \n                  let bananaStore = borrow_global_mut<BananaStore>(account_address);\n                  let bushels_mut_ref = &mut bananaStore.bushels;\n                  let first_bushel = vector::remove<Bushel>(bushels_mut_ref, 0);\n          \n                  let _ = vector::pop_back<Banana>(&mut first_bushel.bananas);\n          \n                  if (vector::length<Banana>(&mut first_bushel.bananas) != 0) {\n                      vector::insert<Bushel>(bushels_mut_ref, 0, first_bushel);\n                  }\n              }\n          }\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:l,onClick:n})]}),(0,t.jsx)(r.Z,{xs:0,md:2})]})},Z=n(7906),b=n(295),C=n(8102),g=n(9755),p=n(2882),v=n(3184),_=n(3816),y=e=>{let{children:o}=e,n=(0,x.ZP)(C.Z)(e=>{let{theme:o}=e;return{["&.".concat(g.Z.head)]:{backgroundColor:o.palette.common.black,color:o.palette.common.white},["&.".concat(g.Z.body)]:{fontSize:10}}}),l=(0,x.ZP)(_.Z)(e=>{let{theme:o}=e;return{"&:nth-of-type(odd)":{backgroundColor:o.palette.action.hover},"&:last-child td, &:last-child th":{border:0}}});return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"정수"})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move는 6개의 부호 없는 정수 유형( u8, u16, u32, u64, u128및 ) 을 지원합니다 u256. 이러한 유형의 값 범위는 0에서 유형의 크기에 따라 달라지는 최대값입니다."})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(p.Z,{component:d.Z,children:(0,t.jsxs)(Z.Z,{sx:{width:"100%"},"aria-label":"customized table",children:[(0,t.jsx)(v.Z,{children:(0,t.jsxs)(_.Z,{children:[(0,t.jsx)(n,{children:"유형"}),(0,t.jsx)(n,{children:"값 범위"})]})}),(0,t.jsx)(b.Z,{component:"div",children:[{type:"부호 없는 8비트 정수,u8",range:"0 ~ 2^8 - 1"},{type:"부호 없는 16비트 정수,u16",range:"0 ~ 2^16 - 1"},{type:"부호 없는 32비트 정수,u32",range:"0 ~ 2^32 - 1"},{type:"부호 없는 64비트 정수,u64",range:"0 ~ 2^64 - 1"},{type:"부호 없는 128비트 정수,u128",range:"0 ~ 2^128 - 1"},{type:"부호 없는 256비트 정수,u256",range:"0 ~ 2^256 - 1"}].map(e=>(0,t.jsxs)(l,{children:[(0,t.jsx)(n,{component:"div",scope:"row",children:null==e?void 0:e.type}),(0,t.jsx)(n,{children:null==e?void 0:e.range})]},null==e?void 0:e.drop_name))})]})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"리터럴"})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"이러한 유형의 리터럴 값은 일련의 숫자(예: 112) 또는 16진수 리터럴(예: )로 지정됩니다 0xFF. 리터럴의 유형은 선택적으로 접미사로 추가할 수 있습니다(예: 112u8. 유형이 지정되지 않은 경우 컴파일러는 리터럴이 사용되는 컨텍스트에서 유형을 유추하려고 시도합니다. 유형을 유추할 수 없으면 로 간주됩니다 u64. 숫자 리터럴은 그룹화 및 가독성을 위해 밑줄로 구분할 수 있습니다. (예, 1_234_5678, 1_000u128, 0xAB_CD_12_35). 리터럴이 지정된(또는 유추된) 크기 범위에 비해 너무 크면 오류가 보고됩니다."})})}),(0,t.jsx)(r.Z,{xs:0,md:3}),(0,t.jsx)(r.Z,{xs:12,md:6,children:(0,t.jsx)(a.Z,{sx:{width:"100%",fontSize:"12px"},children:(0,t.jsx)(f.dn,{text:"// literals with explicit annotations;\n            let explicit_u8 = 1u8;\n            let explicit_u16 = 1u16;\n            let explicit_u32 = 1u32;\n            let explicit_u64 = 2u64;\n            let explicit_u128 = 3u128;\n            let explicit_u256 = 1u256;\n            let explicit_u64_underscored = 154_322_973u64;\n            \n            // literals with simple inference\n            let simple_u8: u8 = 1;\n            let simple_u16: u16 = 1;\n            let simple_u32: u32 = 1;\n            let simple_u64: u64 = 2;\n            let simple_u128: u128 = 3;\n            let simple_u256: u256 = 1;\n            \n            // literals with more complex inference\n            let complex_u8 = 1; // inferred: u8\n            // right hand argument to shift must be u8\n            let _unused = 10 << complex_u8;\n            \n            let x: u8 = 38;\n            let complex_u8 = 2; // inferred: u8\n            // arguments to  must have the same type\n            let _unused = x + complex_u8;\n            \n            let complex_u128 = 133_876; // inferred: u128\n            // inferred from function argument type\n            function_that_takes_u128(complex_u128);\n            \n            // literals can be written in hex\n            let hex_u8: u8 = 0x1;\n            let hex_u16: u16 = 0x1BAE;\n            let hex_u32: u32 = 0xDEAD80;\n            let hex_u64: u64 = 0xCAFE;\n            let hex_u128: u128 = 0xDEADBEEF;\n            let hex_u256: u256 = 0x1123_456A_BCDE_F;\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:{lineNumberColor:"#ccc",lineNumberBgColor:"#222",backgroundColor:"#222",textColor:"#ccc",substringColor:"#00ff00",keywordColor:"#0077ff",attributeColor:"#ffaa00",selectorTagColor:"#0077ff",docTagColor:"#aa00ff",nameColor:"#f8f8f8",builtInColor:"#0077ff",literalColor:"#ffaa00",bulletColor:"#ffaa00",codeColor:"#ccc",additionColor:"#00ff00",regexpColor:"#f8f8f8",symbolColor:"#ffaa00",variableColor:"#ffaa00",templateVariableColor:"#ffaa00",linkColor:"#aa00ff",selectorAttributeColor:"#ffaa00",selectorPseudoColor:"#aa00ff",typeColor:"#0077ff",stringColor:"#00ff00",selectorIdColor:"#ffaa00",quoteColor:"#f8f8f8",templateTagColor:"#ccc",deletionColor:"#ff0000",titleColor:"#0077ff",sectionColor:"#0077ff",commentColor:"#777",metaKeywordColor:"#f8f8f8",metaColor:"#aa00ff",functionColor:"#0077ff",numberColor:"#ffaa00"},onClick:()=>{console.log("Code block clicked")}})})}),(0,t.jsx)(r.Z,{xs:0,md:3}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"운영"})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"이러한 각 유형은 확인된 산술연산의 동일한 집합을 지원합니다.이러한 모든 연산에서 두 인수(왼쪽 및 오른쪽 피연산자)는 동일한 유형이어야 합니다. 다른 유형의 값에 대해 작업해야 하는 경우 먼저 캐스팅을 수행해야 합니다.마찬가지로 연산 결과가 정수형에 비해 너무 클것으로 예상되는 경우 연산을 수행하기 전에 더 큰 크기로 캐스트를 수행하십시오 모든 산술연산은 수학적 정수가 하지 않는 방식으로 동작하는 대신 중단댑니다(오버플로,언더플로,0으로 나누기)"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(p.Z,{component:d.Z,children:(0,t.jsxs)(Z.Z,{sx:{width:"100%"},"aria-label":"customized table",children:[(0,t.jsx)(v.Z,{children:(0,t.jsxs)(_.Z,{children:[(0,t.jsx)(n,{children:"통사론"}),(0,t.jsx)(n,{children:"작업"}),(0,t.jsx)(n,{children:"중단"})]})}),(0,t.jsx)(b.Z,{component:"div",children:[{통사론:"+",작업:"덧셈",중단:"결과가 정수 유형에 비해 너무 큽니다"},{통사론:"-",작업:"뺴기",중단:"결과가 0보다 작음"},{통사론:"*",작업:"곱셈",중단:"결과가 정수 유형에 비해 너무 큽니다"},{통사론:"%",작업:"모듈식 분할",중단:"제수는 0"},{통사론:"/",작업:"잘림 나누기",중단:"제수는 0"}].map(e=>(0,t.jsxs)(l,{children:[(0,t.jsx)(n,{component:"div",scope:"row",children:null==e?void 0:e.통사론}),(0,t.jsx)(n,{children:null==e?void 0:e.작업}),(0,t.jsx)(n,{children:null==e?void 0:e.중단})]},null==e?void 0:e.drop_name))})]})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"정수 유형은 각 수자를 정수 값 대신 일련의 개별 비트 0또는 1로 처리하는 다음과 같은 비트 연산을 지원합니다 비트 연산은 중단되지 않습니다"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(p.Z,{component:d.Z,children:(0,t.jsxs)(Z.Z,{sx:{width:"100%"},"aria-label":"customized table",children:[(0,t.jsx)(v.Z,{children:(0,t.jsxs)(_.Z,{children:[(0,t.jsx)(n,{children:"통사론"}),(0,t.jsx)(n,{children:"작업"}),(0,t.jsx)(n,{children:"설명"})]})}),(0,t.jsx)(b.Z,{component:"div",children:[{통사론:"&",작업:"비트 및",설명:"부울을 수행하고 각 비트에 대해 쌍으로"},{통사론:"|",작업:"비트 또는",설명:"부울 또는 각 비트에 대해 쌍으로 수행"},{통사론:"^",작업:"비트 xor",설명:"부을 독점 또는 각 비트에 대해 쌍으로 수행"}].map(e=>(0,t.jsxs)(l,{children:[(0,t.jsx)(n,{component:"div",scope:"row",children:null==e?void 0:e.통사론}),(0,t.jsx)(n,{children:null==e?void 0:e.작업}),(0,t.jsx)(n,{children:null==e?void 0:e.설명})]},null==e?void 0:e.drop_name))})]})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"비트 연산과 유사하게 각 정수 유형은 비트 이동을 지원합니다.그러나 다른 연산과 달리 오른쪽 피연산자(이동할 비트 수)는 항상 a여야 하며 u8왼쪽 피연산자(이동하려는 숫자와 일치할 필요는 없습니다) 이동할 비트수가 16,32,64,또는 각각 에 대해 크거나 같으면 비트 이동이 중단될수 있습니다"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(p.Z,{component:d.Z,children:(0,t.jsxs)(Z.Z,{sx:{width:"100%"},"aria-label":"customized table",children:[(0,t.jsx)(v.Z,{children:(0,t.jsxs)(_.Z,{children:[(0,t.jsx)(n,{children:"통사론"}),(0,t.jsx)(n,{children:"작업"}),(0,t.jsx)(n,{children:"중단"})]})}),(0,t.jsx)(b.Z,{component:"div",children:[{통사론:"<<",작업:"왼쪽으로 이동",중단:"이동할 비트 수가 정수 유형의 크기보다 큽니다"},{통사론:">>",작업:"오른쪽으로 이동",중단:"이동할 비트 수가 정수 유형의 크기보다 큽니다"}].map(e=>(0,t.jsxs)(l,{children:[(0,t.jsx)(n,{component:"div",scope:"row",children:null==e?void 0:e.통사론}),(0,t.jsx)(n,{children:null==e?void 0:e.작업}),(0,t.jsx)(n,{children:null==e?void 0:e.중단})]},null==e?void 0:e.drop_name))})]})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"정수 유형은 Move에서 비교 연산자를 사용할수 있는 유일한 유형입니다.두 인수는 같은 유형이어야 합니다.다른 유형의정수를 비교해야 하는 경우 먼저 그중 하나를 캐스팅 해야합니다. 비교 연산은 중단되지 않습니다."})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(p.Z,{component:d.Z,children:(0,t.jsxs)(Z.Z,{sx:{width:"100%"},"aria-label":"customized table",children:[(0,t.jsx)(v.Z,{children:(0,t.jsxs)(_.Z,{children:[(0,t.jsx)(n,{children:"통사론"}),(0,t.jsx)(n,{children:"작업"})]})}),(0,t.jsx)(b.Z,{component:"div",children:[{통사론:"<",작업:"보다 작은"},{통사론:">",작업:"보다큰"},{통사론:"<=",작업:"작거나 같음"},{통사론:">=",작업:"크거나 같음"}].map(e=>(0,t.jsxs)(l,{children:[(0,t.jsx)(n,{component:"div",scope:"row",children:null==e?void 0:e.통사론}),(0,t.jsx)(n,{children:null==e?void 0:e.작업})]},null==e?void 0:e.drop_name))})]})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"주조"})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"한 크기의 정수 유형을 다른 크기의 정수 유형으로 캐스트 할수 잇습니다 정수는 캐스팅을 지원하는 Move의 유일한 유형입니다. 지정된 유형에 비해 결과가 너무 크면 캐스팅이 중단됩니다."})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"소유권"})})}),(0,t.jsx)(r.Z,{xs:12,md:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"언어에 내장된 다른 스칼라 값과 마찬가지로 정수 값은 암시적으로 복사할 수 있습니다. 즉 복사와 같은 명시적인 명령 없이 복사할 수 있습니다."})})})]})},w=e=>{let{children:o}=e,n=(0,x.ZP)(C.Z)(e=>{let{theme:o}=e;return{["&.".concat(g.Z.head)]:{backgroundColor:o.palette.common.black,color:o.palette.common.white},["&.".concat(g.Z.body)]:{fontSize:10}}}),l=(0,x.ZP)(_.Z)(e=>{let{theme:o}=e;return{"&:nth-of-type(odd)":{backgroundColor:o.palette.action.hover},"&:last-child td, &:last-child th":{border:0}}});return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"부울"})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move에는 boolean에 기본값은 true와 false입니다"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"운영"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(p.Z,{component:d.Z,children:[(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"bool은 세가지 논리 연산을 지원합니다."}),(0,t.jsxs)(Z.Z,{sx:{width:"100%"},"aria-label":"customized table",children:[(0,t.jsx)(v.Z,{children:(0,t.jsxs)(_.Z,{children:[(0,t.jsx)(n,{children:"통사론"}),(0,t.jsx)(n,{children:"설명"}),(0,t.jsx)(n,{children:"등가표현"})]})}),(0,t.jsx)(b.Z,{component:"div",children:[{통사론:"&&",설명:"단락 논리 및",등가표현:"p && q에 해당합니다 if(p)q else false"},{통사론:"||",설명:"단락 논리 또는",등가표현:"p || q 에 해당합니다 if(p) true else q"},{통사론:"!",설명:"논리적 부정",등가표현:"!p에 해당합니다 if(q) false else true"}].map(e=>(0,t.jsxs)(l,{children:[(0,t.jsx)(n,{component:"div",scope:"row",children:null==e?void 0:e.통사론}),(0,t.jsx)(n,{children:null==e?void 0:e.설명}),(0,t.jsx)(n,{children:null==e?void 0:e.등가표현})]},null==e?void 0:e.drop_name))})]})]})}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"bool값은 여러 Move제어 흐름 구성에서 사용됩니다."})})})]})},B=e=>{let{children:o}=e;return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"주소"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move에는 모듈 과 스크립트 라는 두 가지 유형의 프로그램이 있습니다 . 모듈은 이러한 유형에서 작동하는 함수와 함께 구조체 유형을 정의하는 라이브러리입니다. 모듈 함수는 저장소 업데이트 규칙을 정의하고 있습니다.모듈은 전역저장소에 저장됩니다. main스크립트는 기존 언어의 함수와 유사한 실행 가능한 진입점입니다."})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module overmind::bananas {\n}\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:{lineNumberColor:"#ccc",lineNumberBgColor:"#222",backgroundColor:"#222",textColor:"#ccc",substringColor:"#00ff00",keywordColor:"#0077ff",attributeColor:"#ffaa00",selectorTagColor:"#0077ff",docTagColor:"#aa00ff",nameColor:"#f8f8f8",builtInColor:"#0077ff",literalColor:"#ffaa00",bulletColor:"#ffaa00",codeColor:"#ccc",additionColor:"#00ff00",regexpColor:"#f8f8f8",symbolColor:"#ffaa00",variableColor:"#ffaa00",templateVariableColor:"#ffaa00",linkColor:"#aa00ff",selectorAttributeColor:"#ffaa00",selectorPseudoColor:"#aa00ff",typeColor:"#0077ff",stringColor:"#00ff00",selectorIdColor:"#ffaa00",quoteColor:"#f8f8f8",templateTagColor:"#ccc",deletionColor:"#ff0000",titleColor:"#0077ff",sectionColor:"#0077ff",commentColor:"#777",metaKeywordColor:"#f8f8f8",metaColor:"#aa00ff",functionColor:"#0077ff",numberColor:"#ffaa00"},onClick:()=>{console.log("Code block clicked")}})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"main스크립트는 기존 언어의 함수 와 유사한 실행 가능한 진입점입니다 . 스크립트는 일반적으로 전역 저장소에 대한 업데이트를 수행하는 게시된 모듈의 기능을 호출합니다. 스크립트는 전역 저장소에 게시되지 않는 임시 코드 스니펫입니다."})})})]})},k=e=>{let{children:o}=e;return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"벡터"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move에는 모듈 과 스크립트 라는 두 가지 유형의 프로그램이 있습니다 . 모듈은 이러한 유형에서 작동하는 함수와 함께 구조체 유형을 정의하는 라이브러리입니다. 모듈 함수는 저장소 업데이트 규칙을 정의하고 있습니다.모듈은 전역저장소에 저장됩니다. main스크립트는 기존 언어의 함수와 유사한 실행 가능한 진입점입니다."})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module overmind::bananas {\n}\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:{lineNumberColor:"#ccc",lineNumberBgColor:"#222",backgroundColor:"#222",textColor:"#ccc",substringColor:"#00ff00",keywordColor:"#0077ff",attributeColor:"#ffaa00",selectorTagColor:"#0077ff",docTagColor:"#aa00ff",nameColor:"#f8f8f8",builtInColor:"#0077ff",literalColor:"#ffaa00",bulletColor:"#ffaa00",codeColor:"#ccc",additionColor:"#00ff00",regexpColor:"#f8f8f8",symbolColor:"#ffaa00",variableColor:"#ffaa00",templateVariableColor:"#ffaa00",linkColor:"#aa00ff",selectorAttributeColor:"#ffaa00",selectorPseudoColor:"#aa00ff",typeColor:"#0077ff",stringColor:"#00ff00",selectorIdColor:"#ffaa00",quoteColor:"#f8f8f8",templateTagColor:"#ccc",deletionColor:"#ff0000",titleColor:"#0077ff",sectionColor:"#0077ff",commentColor:"#777",metaKeywordColor:"#f8f8f8",metaColor:"#aa00ff",functionColor:"#0077ff",numberColor:"#ffaa00"},onClick:()=>{console.log("Code block clicked")}})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"main스크립트는 기존 언어의 함수 와 유사한 실행 가능한 진입점입니다 . 스크립트는 일반적으로 전역 저장소에 대한 업데이트를 수행하는 게시된 모듈의 기능을 호출합니다. 스크립트는 전역 저장소에 게시되지 않는 임시 코드 스니펫입니다."})})})]})},N=e=>{let{children:o}=e;return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"서명자"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move에는 모듈 과 스크립트 라는 두 가지 유형의 프로그램이 있습니다 . 모듈은 이러한 유형에서 작동하는 함수와 함께 구조체 유형을 정의하는 라이브러리입니다. 모듈 함수는 저장소 업데이트 규칙을 정의하고 있습니다.모듈은 전역저장소에 저장됩니다. main스크립트는 기존 언어의 함수와 유사한 실행 가능한 진입점입니다."})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module overmind::bananas {\n}\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:{lineNumberColor:"#ccc",lineNumberBgColor:"#222",backgroundColor:"#222",textColor:"#ccc",substringColor:"#00ff00",keywordColor:"#0077ff",attributeColor:"#ffaa00",selectorTagColor:"#0077ff",docTagColor:"#aa00ff",nameColor:"#f8f8f8",builtInColor:"#0077ff",literalColor:"#ffaa00",bulletColor:"#ffaa00",codeColor:"#ccc",additionColor:"#00ff00",regexpColor:"#f8f8f8",symbolColor:"#ffaa00",variableColor:"#ffaa00",templateVariableColor:"#ffaa00",linkColor:"#aa00ff",selectorAttributeColor:"#ffaa00",selectorPseudoColor:"#aa00ff",typeColor:"#0077ff",stringColor:"#00ff00",selectorIdColor:"#ffaa00",quoteColor:"#f8f8f8",templateTagColor:"#ccc",deletionColor:"#ff0000",titleColor:"#0077ff",sectionColor:"#0077ff",commentColor:"#777",metaKeywordColor:"#f8f8f8",metaColor:"#aa00ff",functionColor:"#0077ff",numberColor:"#ffaa00"},onClick:()=>{console.log("Code block clicked")}})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"main스크립트는 기존 언어의 함수 와 유사한 실행 가능한 진입점입니다 . 스크립트는 일반적으로 전역 저장소에 대한 업데이트를 수행하는 게시된 모듈의 기능을 호출합니다. 스크립트는 전역 저장소에 게시되지 않는 임시 코드 스니펫입니다."})})})]})},E=e=>{let{children:o}=e;return(0,t.jsxs)(r.Z,{container:!0,children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"h2",gutterBottom:!0,children:"What is Move and Script"})})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"Move에는 모듈 과 스크립트 라는 두 가지 유형의 프로그램이 있습니다 . 모듈은 이러한 유형에서 작동하는 함수와 함께 구조체 유형을 정의하는 라이브러리입니다. 모듈 함수는 저장소 업데이트 규칙을 정의하고 있습니다.모듈은 전역저장소에 저장됩니다. main스크립트는 기존 언어의 함수와 유사한 실행 가능한 진입점입니다."})})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,md:8,children:(0,t.jsx)(f.dn,{text:"module overmind::bananas {\n}\n",language:"Rust",showLineNumbers:!0,wrapLines:!0,theme:{lineNumberColor:"#ccc",lineNumberBgColor:"#222",backgroundColor:"#222",textColor:"#ccc",substringColor:"#00ff00",keywordColor:"#0077ff",attributeColor:"#ffaa00",selectorTagColor:"#0077ff",docTagColor:"#aa00ff",nameColor:"#f8f8f8",builtInColor:"#0077ff",literalColor:"#ffaa00",bulletColor:"#ffaa00",codeColor:"#ccc",additionColor:"#00ff00",regexpColor:"#f8f8f8",symbolColor:"#ffaa00",variableColor:"#ffaa00",templateVariableColor:"#ffaa00",linkColor:"#aa00ff",selectorAttributeColor:"#ffaa00",selectorPseudoColor:"#aa00ff",typeColor:"#0077ff",stringColor:"#00ff00",selectorIdColor:"#ffaa00",quoteColor:"#f8f8f8",templateTagColor:"#ccc",deletionColor:"#ff0000",titleColor:"#0077ff",sectionColor:"#0077ff",commentColor:"#777",metaKeywordColor:"#f8f8f8",metaColor:"#aa00ff",functionColor:"#0077ff",numberColor:"#ffaa00"},onClick:()=>{console.log("Code block clicked")}})}),(0,t.jsx)(r.Z,{xs:0,md:2}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(a.Z,{sx:{width:"100%"},children:(0,t.jsx)(c.Z,{variant:"body1",gutterBottom:!0,children:"main스크립트는 기존 언어의 함수 와 유사한 실행 가능한 진입점입니다 . 스크립트는 일반적으로 전역 저장소에 대한 업데이트를 수행하는 게시된 모듈의 기능을 호출합니다. 스크립트는 전역 저장소에 게시되지 않는 임시 코드 스니펫입니다."})})})]})};function A(){let[e,o]=(0,l.useState)(!1),[n,u]=(0,l.useState)(0);(0,l.useEffect)(()=>{o(!0)},[]);let f=(0,x.ZP)(d.Z)(e=>{let{theme:o}=e;return{backgroundColor:"dark"===o.palette.mode?"#1A2027":"#fff",...o.typography.body2,padding:o.spacing(1),textAlign:"center",fontSize:20,color:o.palette.text.secondary}});function Z(e){let{children:o,value:n,index:l,...r}=e;return(0,t.jsx)("div",{style:{textAlign:"center",width:"80%"},role:"tabpanel",hidden:n!==l,id:"vertical-tabpanel-".concat(l),"aria-labelledby":"vertical-tab-".concat(l),...r,children:n===l&&(0,t.jsx)(a.Z,{sx:{p:10},children:(0,t.jsx)(c.Z,{children:o})})})}function b(e){return{id:"vertical-tab-".concat(e),"aria-controls":"vertical-tabpanel-".concat(e)}}return Z.propTypes={children:h().node,index:h().number.isRequired,value:h().number.isRequired},e&&(0,t.jsxs)(r.Z,{container:!0,sx:{marginTop:"84px"},children:[(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsx)(f,{children:"MOVE BOOK"})}),(0,t.jsx)(r.Z,{xs:12,children:(0,t.jsxs)(a.Z,{sx:{flexGrow:1,bgcolor:"background.paper",display:"flex",minHeight:"600px",textAlign:"center"},children:[(0,t.jsxs)(s.Z,{orientation:"vertical",variant:"scrollable",value:n,onChange:(e,o)=>{u(o)},"aria-label":"Vertical tabs example",sx:{borderRight:1,borderColor:"divider",width:"16%"},children:[(0,t.jsx)(i.Z,{label:"0_소개 및 설치",...b(0)}),(0,t.jsx)(i.Z,{label:"1_모듈 및 스크립트",...b(1)}),(0,t.jsx)(i.Z,{label:"2_정수",...b(2)}),(0,t.jsx)(i.Z,{label:"3_부울",...b(3)}),(0,t.jsx)(i.Z,{label:"4_주소",...b(4)}),(0,t.jsx)(i.Z,{label:"5_벡터",...b(5)}),(0,t.jsx)(i.Z,{label:"6_서명자",...b(6)}),(0,t.jsx)(i.Z,{label:"7_참조",...b(7)}),(0,t.jsx)(i.Z,{label:"8_튜플 및 단위",...b(8)}),(0,t.jsx)(i.Z,{label:"9_지역 변수 및 범위",...b(9)}),(0,t.jsx)(i.Z,{label:"10_평등",...b(10)}),(0,t.jsx)(i.Z,{label:"11_중단 및 어성셜",...b(11)}),(0,t.jsx)(i.Z,{label:"12_조건부",...b(12)}),(0,t.jsx)(i.Z,{label:"13_반복문",...b(13)}),(0,t.jsx)(i.Z,{label:"14_기능",...b(14)}),(0,t.jsx)(i.Z,{label:"15_구조체 리소스",...b(15)}),(0,t.jsx)(i.Z,{label:"16_상수",...b(16)}),(0,t.jsx)(i.Z,{label:"17_제네릭",...b(17)}),(0,t.jsx)(i.Z,{label:"18_능력",...b(18)}),(0,t.jsx)(i.Z,{label:"19_용도 및 별칭",...b(19)}),(0,t.jsx)(i.Z,{label:"20_친구",...b(20)}),(0,t.jsx)(i.Z,{label:"21_패키지",...b(21)}),(0,t.jsx)(i.Z,{label:"22_패키지 업그레이드",...b(22)}),(0,t.jsx)(i.Z,{label:"23_단위 및 테스트",...b(23)}),(0,t.jsx)(i.Z,{label:"24_글로벌 스토리지 구조",...b(24)}),(0,t.jsx)(i.Z,{label:"25_글로벌 스토리지 사업자",...b(25)}),(0,t.jsx)(i.Z,{label:"26_도서관",...b(26)}),(0,t.jsx)(i.Z,{label:"27_코딩 규칙 이동",...b(27)}),(0,t.jsx)(i.Z,{label:"tutorial",...b(28)})]}),(0,t.jsx)(Z,{value:n,index:0,children:(0,t.jsx)(j,{})}),(0,t.jsx)(Z,{value:n,index:1,children:(0,t.jsx)(m,{})}),(0,t.jsx)(Z,{value:n,index:2,children:(0,t.jsx)(y,{})}),(0,t.jsx)(Z,{value:n,index:3,children:(0,t.jsx)(w,{})}),(0,t.jsx)(Z,{value:n,index:4,children:(0,t.jsx)(B,{})}),(0,t.jsx)(Z,{value:n,index:5,children:(0,t.jsx)(k,{})}),(0,t.jsx)(Z,{value:n,index:6,children:(0,t.jsx)(N,{})}),(0,t.jsx)(Z,{value:n,index:7,children:(0,t.jsx)(E,{})}),(0,t.jsx)(Z,{value:n,index:8,children:"2"}),(0,t.jsx)(Z,{value:n,index:9,children:"2"}),(0,t.jsx)(Z,{value:n,index:10,children:"5"}),(0,t.jsx)(Z,{value:n,index:11,children:"5"}),(0,t.jsx)(Z,{value:n,index:12,children:"5"}),(0,t.jsx)(Z,{value:n,index:13,children:"5"}),(0,t.jsx)(Z,{value:n,index:14,children:"5"}),(0,t.jsx)(Z,{value:n,index:15,children:"5"}),(0,t.jsx)(Z,{value:n,index:16,children:"16장"}),(0,t.jsx)(Z,{value:n,index:17,children:"16장"}),(0,t.jsx)(Z,{value:n,index:18,children:"16장"}),(0,t.jsx)(Z,{value:n,index:19,children:"16장"}),(0,t.jsx)(Z,{value:n,index:20,children:"16장"}),(0,t.jsx)(Z,{value:n,index:21,children:"16장"}),(0,t.jsx)(Z,{value:n,index:22,children:"16장"}),(0,t.jsx)(Z,{value:n,index:23,children:"16장"}),(0,t.jsx)(Z,{value:n,index:24,children:"16장"}),(0,t.jsx)(Z,{value:n,index:25,children:"16장"}),(0,t.jsx)(Z,{value:n,index:26,children:"16장"}),(0,t.jsx)(Z,{value:n,index:27,children:"마지막"}),(0,t.jsx)(Z,{value:n,index:28,children:"튜토리얼"})]})})]})}}},function(e){e.O(0,[841,9774,2888,179],function(){return e(e.s=5557)}),_N_E=e.O()}]);