"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[66],{51066:function(t,e,n){n.r(e);var s=n(85893),i=n(41181),o=n(15861),r=n(87357),l=n(38154);e.default=()=>(0,s.jsx)(i.ZP,{container:!0,children:(0,s.jsxs)(i.ZP,{xs:12,children:[(0,s.jsx)(r.Z,{sx:{width:"100%"},children:(0,s.jsx)(o.Z,{variant:"h3",gutterBottom:!0,children:"전역 스토리지 - 구조 (Global Storage - Structure)"})}),(0,s.jsx)(r.Z,{sx:{width:"100%",textAlign:"left",marginTop:"30px"},children:(0,s.jsx)(o.Z,{variant:"body1",gutterBottom:!0,children:"Move 프로그램의 목적은 트리 모양의 영구적인 전역 스토리지에서 읽기와 쓰기를 수행하는 것입니다. 프로그램은 이 트리 이외의 파일시스템, 네트워크 또는 다른 데이터에 접근할 수 없습니다. 의사 코드로 표현하면 전역 스토리지는 다음과 같습니다."})}),(0,s.jsx)(l.Z,{code:"  #[test] // OK\n  fun this_is_a_test() { ... }\n  \n  #[test] // Will fail to compile since the test takes an argument\n  fun this_is_not_correct(arg: signer) { ... }\n"}),(0,s.jsx)(r.Z,{sx:{width:"100%",textAlign:"left",marginTop:"30px"},children:(0,s.jsx)(o.Z,{variant:"body1",gutterBottom:!0,children:"구조적으로, 전역 스토리지는 계정 주소를 루트로 하는 트리로 구성된 포레스트입니다. 각 주소는 리소스 데이터 값과 모듈 코드 값 모두를 저장할 수 있습니다. 위의 의사 코드에서와 같이"})})]})})},38154:function(t,e,n){n.d(e,{Z:function(){return c}});var s=n(85893),i=n(74855),o=n(34209),r=n(84283),l=n(90066),a=n(67294);function c(t){let{code:e}=t,[n,c]=(0,a.useState)(!1),[u,d]=(0,a.useState)(!1),[x,h]=(0,a.useState)(!1);return(0,s.jsxs)("div",{style:{position:"relative"},onMouseEnter:()=>{d(!0)},onMouseLeave:()=>{d(!1)},children:[(0,s.jsx)(o.Z,{language:"javascript",style:r.cL,children:e}),(0,s.jsx)(i.CopyToClipboard,{text:e,children:(0,s.jsx)("button",{onClick:()=>{console.log("코드가 복사되었습니다."),c(!0),h(!0),setTimeout(()=>{c(!1),h(!1)},1e3)},style:{position:"absolute",top:"0",right:"0",margin:"8px",padding:"8px",background:"none",border:"none",cursor:"pointer",opacity:u?1:0,transition:"opacity 0.3s",display:"flex",alignItems:"center"},children:x?(0,s.jsx)(l.Z,{style:{color:"#fff",transition:"color 0.3s"}}):(0,s.jsx)(l.Z,{style:{color:n?"#fff":"#000",transition:"color 0.3s"}})})})]})}}}]);